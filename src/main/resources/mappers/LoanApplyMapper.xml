<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.ac.kopo.final_hanaasset360.dao.LoanApplyDAO">

    <!-- findById 메서드에 대한 SQL 쿼리 -->
    <select id="findById" resultType="kr.ac.kopo.final_hanaasset360.vo.LoanApply">
        SELECT * FROM loan_switch WHERE id = #{id}
    </select>

    <!-- update 메서드에 대한 SQL 쿼리 -->
    <update id="update">
        UPDATE loan_switch SET NEW_LOAN_STATUS = '심사완료' WHERE id = #{id}
    </update>

    <!-- findByLoanRecordId 메서드에 대한 SQL 쿼리 -->
    <select id="findByLoanRecordId" resultType="kr.ac.kopo.final_hanaasset360.vo.LoanExisting">
        SELECT * FROM loan_records WHERE loanRecordId = #{loanRecordId}
    </select>

    <!-- delete 메서드에 대한 SQL 쿼리 -->
    <delete id="delete">
        DELETE FROM loan_records WHERE loanRecordId = #{loanExisting.loanRecordId}
    </delete>

    <!-- insert 메서드에 대한 SQL 쿼리 -->
    <insert id="insert">
        INSERT INTO loan_records (
            LOANRECORDID, USERID, LOANAMOUNT, INTERESTRATE, LOANSTARTDATE, LOANENDDATE,
            OVERDUESTATUS, REPAYMENT_ACCOUNT, FINANCE, OVERDUE, REPAYMENT, LOANBALANCE,
            LOANPRODUCTID, REPAYMENTDATE
        ) VALUES (
                     #{loanExisting.loanRecordId}, #{loanExisting.userId}, #{loanExisting.loanAmount}, #{loanExisting.interestRate},
                     sysdate, ADD_MONTHS(sysdate, 60), #{loanExisting.overdueStatus}, #{loanExisting.repaymentAccount},
                     #{loanExisting.finance}, #{loanExisting.overdue}, #{loanExisting.repayment}, #{loanExisting.loanBalance},
                     #{loanExisting.loanProductId}, #{loanExisting.repaymentDate}
                 )
    </insert>

    <!-- overdue 메서드에 대한 SQL 쿼리 -->
    <update id="overdue">
        UPDATE accounts SET account_balance = account_balance - #{fee} WHERE account_id = #{repaymentAccount}
    </update>

</mapper>